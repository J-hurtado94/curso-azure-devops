pool:
  name: Azure Pipelines
  demands:
  - msbuild
  - visualstudio

variables:
  solution: 'KodotiAzureDevOpsProject.sln'
  BuildPlatform: 'Any CPU'  # Añadir valor por defecto para BuildPlatform
  BuildConfiguration: 'Release'  # Añadir valor por defecto para BuildConfiguration

jobs:
- job: BuildAndTest
  pool:
    vmImage: 'windows-latest'  # Asegurarte de que el agente sea Windows
    demands:
    - msbuild
    - visualstudio
  steps:
  - script: echo $(BuildPlatform)
    displayName: 'Show BuildPlatform'
  - script: echo $(BuildConfiguration)
    displayName: 'Show BuildConfiguration'

  - task: NuGetToolInstaller@0
    displayName: 'Use NuGet'
    inputs:
      versionSpec: 4.4.1

  - task: NuGetCommand@2
    displayName: 'NuGet restore'
    inputs:
      restoreSolution: '$(solution)'

  - task: VSBuild@1
    displayName: 'Build solution'
    inputs:
      solution: '$(solution)'
      platform: '$(BuildPlatform)'
      configuration: '$(BuildConfiguration)'

  - task: VSTest@2
    displayName: 'Test Assemblies'
    inputs:
      testAssemblyVer2: |
        **\$(BuildConfiguration)\*Tests*.dll
        **\$(BuildConfiguration)\*.*Tests*.dll
        **\$(BuildConfiguration)\**\*Tests*.dll
        **\$(BuildConfiguration)\**\*.*Tests*.dll
        !**\obj\**
      platform: '$(BuildPlatform)'
      configuration: '$(BuildConfiguration)'
    enabled: false

  - task: CopyFiles@2
    displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishSymbols@2
    displayName: 'Publish symbols path'
    inputs:
      SearchPattern: '**\bin\**\*.pdb'
      PublishSymbols: false
    continueOnError: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
    condition: succeededOrFailed()
 
- job: DownloadAndTestArtifacts
  pool:
    vmImage: 'windows-latest'  # Asegurarte de que el agente sea Windows
    demands:
    - vstest
  dependsOn: BuildAndTest
  strategy:
    parallel: 3  # Configurar el número de agentes paralelos
  steps:
  - task: DownloadBuildArtifacts@1
    displayName: 'Download Build Artifacts'
    inputs:
      artifactName: 'drop'
      extractTars: false

  - task: VSTest@3
    displayName: 'VsTest - testAssemblies'


- deployment: VMDeploy
  displayName: 'Web deploy'
  environment:
    name: 'WEB'
    resourceType: VirtualMachine
    tags: 'WEB'
  pool:
    vmImage: 'windows-latest'
    name: Azure Pipelines
    demands:
      - msbuild
      - visualstudio
  dependsOn: 
    - BuildAndTest
    - DownloadAndTestArtifacts
  strategy:
    runOnce:
      deploy:
        steps:
          - script: echo 'Despliegue de la aplicación web'
            displayName: 'Despliegue de la aplicación web'




